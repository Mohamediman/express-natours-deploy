{"version":3,"file":"static/js/345.dea6fb18.chunk.js","mappings":"iNAsFA,WAAeA,EAAAA,EAAAA,IAAQ,KAAM,CAAEC,MAAAA,EAAAA,IAA/B,EA7Ec,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACTC,GAAqBC,EAAAA,EAAAA,IAAyB,CAClDC,gBAAiBC,EAAAA,IAEXD,GAAoBE,EAAAA,EAAAA,IAAYJ,GAAhCE,gBAER,GAAgCG,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,KAFZ,eAAOC,EAAP,KAAiBC,EAAjB,KAKQH,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAETG,EAAW,SAACC,GAChBF,GAAY,kBAAKD,GAAN,cAAiBG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAQvD,OAAIZ,GACK,SAAC,KAAD,CAAUa,GAAG,OAMpB,iBAAKC,UAAU,aAAf,WACE,eAAIA,UAAU,6BAAd,sCACA,kBAAMA,UAAU,mBAAmBC,SAAU,SAACN,GAAD,OAdhC,SAACA,GAChBA,EAAEO,iBACFnB,EAAMO,EAAOC,GAYyCU,CAASN,IAA7D,WACE,iBAAKK,UAAU,cAAf,WACE,kBAAOG,QAAQ,QAAQH,UAAU,cAAjC,kCAGA,kBACEI,KAAK,QACLC,GAAG,QACHR,KAAK,QACLG,UAAU,cACVN,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BW,YAAY,sBACZC,UAAQ,QAGZ,iBAAKP,UAAU,uBAAf,WACE,kBAAOG,QAAQ,WAAWH,UAAU,cAApC,uBAGA,kBACEI,KAAK,WACLC,GAAG,WACHL,UAAU,cACVH,KAAK,WACLH,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BW,YAAY,WACZC,UAAQ,EACRC,UAAU,UAGd,gBAAKR,UAAU,cAAf,UACE,mBAAQA,UAAU,iBAAlB,+B,iECnEK,SAASS,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,IAAIG,EAAY,MAAPJ,EAAc,KAAyB,qBAAXK,QAA0BL,EAAIK,OAAOC,WAAaN,EAAI,cAE3F,GAAU,MAANI,EAAJ,CACA,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKZ,KAAQU,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGnB,QAETa,GAAKQ,EAAKO,SAAWf,GAH4BS,GAAK,IAK5D,MAAOO,GACPN,GAAK,EACLH,EAAKS,EACL,QACA,IACOP,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,GFtBuB,CAAqBT,EAAKC,KAAM,EAAAiB,EAAA,GAA2BlB,EAAKC,IGLjF,WACb,MAAM,IAAIkB,UAAU,6IHIgF","sources":["components/auth/Login.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { createStructuredSelector } from 'reselect';\nimport { connect, useSelector } from 'react-redux';\nimport { login } from '../../redux/auth/auth.action';\nimport { selectAuthenticated } from '../../redux/auth/auth.selectors';\n\nconst Login = ({ login }) => {\n  const structuredSelector = createStructuredSelector({\n    isAuthenticated: selectAuthenticated,\n  });\n  const { isAuthenticated } = useSelector(structuredSelector);\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  /* <Alert /> */\n\n  return (\n    <div className=\"login-form\">\n      <h2 className=\"heading-secondary ma-bt-lg\">Login into your account</h2>\n      <form className=\"form form--login\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form__group\">\n          <label htmlFor=\"email\" className=\"form__label\">\n            Enter email address\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            className=\"form__input\"\n            onChange={(e) => onChange(e)}\n            placeholder=\"youremail@email.com\"\n            required\n          />\n        </div>\n        <div className=\"form__group ma-bt-md\">\n          <label htmlFor=\"password\" className=\"form__label\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            className=\"form__input\"\n            name=\"password\"\n            onChange={(e) => onChange(e)}\n            placeholder=\"........\"\n            required\n            minLength=\"8\"\n          />\n        </div>\n        <div className=\"form__group\">\n          <button className=\"btn btn--green\">Login</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func,\n};\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: selectAuthenticated(state),\n// });\n\nexport default connect(null, { login })(Login);\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["connect","login","structuredSelector","createStructuredSelector","isAuthenticated","selectAuthenticated","useSelector","useState","email","password","formData","setFormData","onChange","e","target","name","value","to","className","onSubmit","preventDefault","htmlFor","type","id","placeholder","required","minLength","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}