{"version":3,"sources":["redux/tours/tours.selectors.js","components/tourDetails/TourHeader.js","components/tourDetails/TourDescription.js","components/tourDetails/TourGuide.js","components/tourDetails/TourFactsAndGuides.js","components/tourDetails/TourReview.js","components/tourDetails/TourSectionPictures.js","components/tourDetails/TourMap.js","components/tourDetails/TourDetails.js"],"names":["selectTours","state","tours","SelectAllTours","createSelector","SelectATour","tour","SelectTourLoading","loading","TourHeader","className","src","imageCover","alt","name","split","splice","join","duration","startLocation","description","TourDescription","TourGuide","guide","photo","role","TourFactsAndGuides","format","startDates","difficulty","maxGroupSize","ratingsAverage","guides","map","_id","TourReview","review","user","rating","TourSectionPictures","image","TourMap","Number","locations","coordinates","useState","latitude","longitude","zoom","viewport","setViewport","mapStyle","mapboxApiAccessToken","width","height","scrollZoom","onViewportChange","loc","lng","lt","offsetLeft","offsetTop","connect","bookTour","getTour","match","structuredSelector","createStructuredSelector","selectAuthUser","useSelector","useEffect","params","slug","images","length","uniqueKey","uuidv4","id","reviews","LogoWhite","onClick","e","href"],"mappings":"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","file":"static/js/10.d6db5ba2.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectTours = (state) => state.tours;\n\nexport const SelectAllTours = createSelector(\n  selectTours,\n  (tours) => tours.tours\n);\nexport const SelectATour = createSelector(selectTours, (tours) => tours.tour);\nexport const SelectTourLoading = createSelector(\n  selectTours,\n  (tours) => tours.loading\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { ImClock } from 'react-icons/im';\nimport { ImLocation } from 'react-icons/im';\n\nconst TourHeader = ({ tour }) => {\n  return (\n    <section className=\"section-header\">\n      <div className=\"header__hero\">\n        <div className=\"header__hero-overlay\">&nbsp; </div>\n        <img\n          src={`/img/tours/${tour.imageCover}`}\n          alt={tour.name}\n          className=\"header__hero-img\"\n        />\n      </div>\n      <div className=\"heading-box\">\n        <h1 className=\"heading-primary\">\n          <span>\n            {tour && tour.name.split(' ').splice(0, 2).join(' ')}\n            <br />\n            {tour && tour.name.split(' ').splice(2).join('')}\n          </span>\n        </h1>\n        <div className=\"heading-box__group\">\n          <div className=\"heading-box__detail\">\n            <ImClock className=\"heading-box__icon\" />\n            <span className=\"heading-box__text\">\n              {tour && tour.duration} days\n            </span>\n          </div>\n          <div className=\"heading-box__detail\">\n            <ImLocation className=\"heading-box__icon\" />\n            <span className=\"heading-box__text\">\n              {' '}\n              {tour && tour.startLocation.description}\n            </span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nTourHeader.propTypes = {\n  tour: PropTypes.object,\n};\n\nexport default TourHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TourDescription = ({ tour }) => {\n  return (\n    <div className=\"description-box\">\n      <h2 className=\"heading-secondary ma-bt-lg\">About {tour.name} </h2>\n      <p className=\"description__text\">\n        {tour.description && tour.description.split('.').splice(0, 2)}\n      </p>\n      <p className=\"description__text\">\n        {tour.description && tour.description.split('.').splice(2)}\n      </p>\n    </div>\n  );\n};\n\nTourDescription.propTypes = {\n  tour: PropTypes.object,\n};\n\nexport default TourDescription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TourGuide = ({ guide }) => (\n  <div className=\"overview-box__detail\">\n    <img\n      src={`/img/users/${guide.photo}`}\n      alt={guide.role}\n      className=\"overview-box__img\"\n    />\n    <span className=\"overview-box__label\">{guide.role}</span>\n    <span className=\"overview-box__text\">{guide.name}</span>\n  </div>\n);\n\nTourGuide.propTypes = {\n  guide: PropTypes.object,\n};\n\nexport default TourGuide;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport TourGuide from './TourGuide';\nimport {\n  IoIosCalendar,\n  IoIosStarOutline,\n  IoIosTrendingUp,\n} from 'react-icons/io';\nimport { FaRegUser } from 'react-icons/fa';\n\nconst TourFactsAndGuides = ({ tour }) => {\n  return (\n    <div className=\"overview-box\">\n      <div>\n        <div className=\"overview-box__group\">\n          <h2 className=\"heading-secondary ma-bt-lg\">Quick facts</h2>\n          <div className=\"overview-box__detail\">\n            <IoIosCalendar className=\"overview-box__icon\" />\n            <span className=\"overview-box__label\">Next date</span>\n            <span className=\"overview-box__text\">\n              <Moment format=\"MMM YYYY\">{tour.startDates[0]}</Moment>\n            </span>\n          </div>\n          <div className=\"overview-box__detail\">\n            <IoIosTrendingUp className=\"overview-box__icon\" />\n            <span className=\"overview-box__label\">Difficulty</span>\n            <span className=\"overview-box__text\">{tour.difficulty}</span>\n          </div>\n          <div className=\"overview-box__detail\">\n            <FaRegUser className=\"overview-box__icon\" />\n            <span className=\"overview-box__label\">Participants</span>\n            <span className=\"overview-box__text\">\n              {tour.maxGroupSize} people\n            </span>\n          </div>\n          <div className=\"overview-box__detail\">\n            <IoIosStarOutline className=\"overview-box__icon\" />\n            <span className=\"overview-box__label\">Rating</span>\n            <span className=\"overview-box__text\">\n              {tour.ratingsAverage} / 5\n            </span>\n          </div>\n        </div>\n\n        <div className=\"overview-box__group\">\n          <h2 className=\"heading-secondary ma-bt-lg\">Your tour guides</h2>\n          {tour.guides.map((guide) => (\n            <TourGuide key={guide._id} guide={guide} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTourFactsAndGuides.propTypes = {\n  tour: PropTypes.object,\n};\n\nexport default TourFactsAndGuides;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { IoIosStarOutline } from 'react-icons/io';\n\nconst TourReview = ({ review }) => (\n  <div className=\"reviews__card\">\n    <div className=\"reviews__avatar\">\n      <img\n        src={`/img/users/${review.user.photo}`}\n        alt={review.user.name}\n        className=\"reviews__avatar-img\"\n      />\n      <h6 className=\"reviews__user\">{review.user.name}</h6>\n    </div>\n    <p className=\"reviews__text\">{review.review}</p>\n\n    <div className=\"reviews__rating\">\n      <IoIosStarOutline\n        className={`reviews__star ${\n          review.rating >= 1 && `reviews__star--active`\n        } `}\n      />\n      <IoIosStarOutline\n        className={`reviews__star ${\n          review.rating >= 2 && `reviews__star--active`\n        } `}\n      />\n      <IoIosStarOutline\n        className={`reviews__star ${\n          review.rating >= 3 && `reviews__star--active`\n        } `}\n      />\n      <IoIosStarOutline\n        className={`reviews__star ${\n          review.rating >= 4 && `reviews__star--active`\n        } `}\n      />\n      <IoIosStarOutline\n        className={`reviews__star ${\n          review.rating >= 5 && `reviews__star--active`\n        } `}\n      />\n    </div>\n  </div>\n);\n\nTourReview.propTypes = {\n  review: PropTypes.object,\n};\n\nexport default TourReview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TourSectionPictures = ({ image }) => (\n  <div className=\"picture-box\">\n    <img\n      className=\"picture-box__img picture-box__img--1\"\n      src={`/img/tours/${image}`}\n      alt={image}\n    />\n  </div>\n);\n\nTourSectionPictures.propTypes = {\n  image: PropTypes.string,\n};\n\nexport default TourSectionPictures;\n","import React, { Fragment, useState, useMemo } from 'react';\n\n// import mapboxgl from 'mapbox-gl/dist/mapbox-gl.js';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport PropTypes from 'prop-types';\n\nconst TourMap = ({ tour }) => {\n  let lgCn, ltCn;\n  if (tour) {\n    lgCn = Number(tour.locations[0].coordinates[0]);\n    ltCn = Number(tour.locations[0].coordinates[1]);\n  }\n\n  const [viewport, setViewport] = useState({\n    latitude: 34.011646,\n    longitude: -116.107963,\n    zoom: 5,\n  });\n\n  if (tour && tour.locations) {\n    return (\n      <ReactMapGL\n        mapStyle={'mapbox://styles/mohamedai/ckskl74tv0ell17rk4x53odnj'}\n        mapboxApiAccessToken={\n          'pk.eyJ1IjoibW9oYW1lZGFpIiwiYSI6ImNrc2tqNHFqYTJvN2wybm9hdnJreTdvaTMifQ.WLNcgVIG5MDN9gxqQ88a8A'\n        }\n        {...viewport}\n        width=\"100%\"\n        height=\"100%\"\n        scrollZoom={false}\n        onViewportChange={(viewport) => setViewport(viewport)}\n      >\n        {tour.locations.map((loc) => {\n          let lng = Number(loc.coordinates[0]);\n          let lt = Number(loc.coordinates[1]);\n\n          // console.log(\"marker:\", lng, lt)\n\n          return (\n            <Marker\n              latitude={lt}\n              longitude={lng}\n              offsetLeft={-20}\n              offsetTop={-10}\n            >\n              <div key={lng * lt} className=\"marker\"></div>\n            </Marker>\n          );\n        })}\n      </ReactMapGL>\n    );\n  } else {\n    return (\n      <Fragment>\n        <h1>No Tour found</h1>\n      </Fragment>\n    );\n  }\n};\n\nTourMap.propTypes = {\n  tour: PropTypes.object,\n};\n\nexport default TourMap;\n","import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport TourHeader from './TourHeader';\nimport TourDescription from './TourDescription';\nimport TourFactsAndGuides from './TourFactsAndGuides';\nimport TourReview from './TourReview';\nimport TourSectionPictures from './TourSectionPictures';\nimport TourMap from './TourMap';\nimport Spinner from '../spinner/spinner';\n\nimport LogoWhite from '../../img/logo-white.png';\n\nimport { createStructuredSelector } from 'reselect';\nimport { connect, useSelector } from 'react-redux';\nimport { bookTour, getTour } from '../../redux/tours/tours.action';\nimport { selectAuthUser } from '../../redux/auth/auth.selectors';\nimport {\n  SelectATour,\n  SelectTourLoading,\n} from '../../redux/tours/tours.selectors';\n\nconst TourDetails = ({ match, bookTour, getTour }) => {\n  const structuredSelector = createStructuredSelector({\n    tour: SelectATour,\n    loading: SelectTourLoading,\n    user: selectAuthUser,\n  });\n\n  const { tour, loading, user } = useSelector(structuredSelector);\n\n  useEffect(() => {\n    getTour(match.params.slug);\n    //eslint-disable-next-line\n  }, []);\n  return (\n    <Fragment>\n      {tour ? <TourHeader tour={tour} /> : <Spinner />}\n\n      <section className=\"section-description\">\n        {tour ? <TourFactsAndGuides tour={tour} /> : <Spinner />}\n        {tour ? <TourDescription tour={tour} /> : <Spinner />}\n      </section>\n      <section className=\"section-pictures\">\n        {tour && tour.images.length > 0 ? (\n          tour.images.map((image) => {\n            let uniqueKey = uuidv4();\n            return <TourSectionPictures key={uniqueKey} image={image} />;\n          })\n        ) : (\n          <Spinner />\n        )}\n      </section>\n\n      {tour ? (\n        <section className=\"section-map\">\n          <div id=\"map\"></div>\n          <TourMap tour={tour} />\n        </section>\n      ) : (\n        <Spinner />\n      )}\n\n      <section className=\"section-reviews\">\n        <div className=\"reviews\">\n          {tour && tour.reviews.length > 0 ? (\n            tour.reviews.map((review) => (\n              <TourReview key={review._id} review={review} />\n            ))\n          ) : (\n            <Spinner />\n          )}\n        </div>\n      </section>\n\n      <section className=\"section-cta\">\n        {tour ? (\n          <div className=\"cta\">\n            <div className=\"cta__img cta__img--logo\">\n              <img src={LogoWhite} alt=\"Natours logo\" />\n            </div>\n            <img\n              src=\"/img/tours/tour-5-2.jpg\"\n              alt=\"natours\"\n              className=\"cta__img cta__img--1\"\n            />\n            <img\n              src=\"/img/tours/tour-5-1.jpg\"\n              alt=\"natours images\"\n              className=\"cta__img cta__img--2\"\n            />\n\n            <div className=\"cta__content\">\n              <h2 className=\"heading-secondary\">What are you waiting for?</h2>\n              <p className=\"cta__text\">\n                {tour && tour.duration} days. 1 adventure. Infinite memories.\n                Make it yours today!\n              </p>\n              {user ? (\n                <button\n                  className=\"btn btn--green span-all-rows\"\n                  onClick={(e) => bookTour(tour.id)}\n                >\n                  Book tour now!\n                </button>\n              ) : (\n                <a href=\"/login\" className=\"btn btn--green span-all-rows\">\n                  Login to Book tour\n                </a>\n              )}\n            </div>\n          </div>\n        ) : (\n          <Spinner />\n        )}\n      </section>\n    </Fragment>\n  );\n};\n\nTourDetails.propTypes = {\n  tour: PropTypes.object,\n  loading: PropTypes.bool,\n  bookTour: PropTypes.func,\n  isLoggedIn: PropTypes.func,\n};\n\nexport default connect(null, { bookTour, getTour })(TourDetails);\n"],"sourceRoot":""}