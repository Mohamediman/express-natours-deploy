{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/auth/Login.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","connect","login","structuredSelector","createStructuredSelector","isAuthenticated","selectAuthenticated","useSelector","useState","email","password","formData","setFormData","onChange","e","target","name","to","className","onSubmit","preventDefault","htmlFor","type","id","placeholder","required","minLength"],"mappings":"gJAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,yHIiFvFC,sBAAQ,KAAM,CAAEC,WAAhBD,EA7ED,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACTC,EAAqBC,YAAyB,CAClDC,gBAAiBC,MAEXD,EAAoBE,YAAYJ,GAAhCE,gBAER,EAAgCG,mBAAS,CACvCC,MAAO,GACPC,SAAU,KAFZ,mBAAOC,EAAP,KAAiBC,EAAjB,KAKQH,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAETG,EAAW,SAACC,GAChBF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOnB,UAQvD,OAAIS,EACK,cAAC,IAAD,CAAUY,GAAG,MAMpB,sBAAKC,UAAU,aAAf,UACE,oBAAIA,UAAU,6BAAd,qCACA,uBAAMA,UAAU,mBAAmBC,SAAU,SAACL,GAAD,OAdhC,SAACA,GAChBA,EAAEM,iBACFlB,EAAMO,EAAOC,GAYyCS,CAASL,IAA7D,UACE,sBAAKI,UAAU,cAAf,UACE,uBAAOG,QAAQ,QAAQH,UAAU,cAAjC,iCAGA,uBACEI,KAAK,QACLC,GAAG,QACHP,KAAK,QACLE,UAAU,cACVL,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BU,YAAY,sBACZC,UAAQ,OAGZ,sBAAKP,UAAU,uBAAf,UACE,uBAAOG,QAAQ,WAAWH,UAAU,cAApC,sBAGA,uBACEI,KAAK,WACLC,GAAG,WACHL,UAAU,cACVF,KAAK,WACLH,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BU,YAAY,WACZC,UAAQ,EACRC,UAAU,SAGd,qBAAKR,UAAU,cAAf,SACE,wBAAQA,UAAU,iBAAlB","file":"static/js/7.2d60d755.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { createStructuredSelector } from 'reselect';\nimport { connect, useSelector } from 'react-redux';\nimport { login } from '../../redux/auth/auth.action';\nimport { selectAuthenticated } from '../../redux/auth/auth.selectors';\n\nconst Login = ({ login }) => {\n  const structuredSelector = createStructuredSelector({\n    isAuthenticated: selectAuthenticated,\n  });\n  const { isAuthenticated } = useSelector(structuredSelector);\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  /* <Alert /> */\n\n  return (\n    <div className=\"login-form\">\n      <h2 className=\"heading-secondary ma-bt-lg\">Login into your account</h2>\n      <form className=\"form form--login\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form__group\">\n          <label htmlFor=\"email\" className=\"form__label\">\n            Enter email address\n          </label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            className=\"form__input\"\n            onChange={(e) => onChange(e)}\n            placeholder=\"youremail@email.com\"\n            required\n          />\n        </div>\n        <div className=\"form__group ma-bt-md\">\n          <label htmlFor=\"password\" className=\"form__label\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            className=\"form__input\"\n            name=\"password\"\n            onChange={(e) => onChange(e)}\n            placeholder=\"........\"\n            required\n            minLength=\"8\"\n          />\n        </div>\n        <div className=\"form__group\">\n          <button className=\"btn btn--green\">Login</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func,\n};\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: selectAuthenticated(state),\n// });\n\nexport default connect(null, { login })(Login);\n"],"sourceRoot":""}