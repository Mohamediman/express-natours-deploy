{"version":3,"sources":["components/tours/Tour.js","redux/tours/tours.selectors.js","components/tours/Tours.js"],"names":["Tour","tour","className","src","imageCover","alt","name","difficulty","duration","summary","startLocation","description","format","startDates","locations","length","maxGroupSize","price","ratingsAverage","ratingsQuantity","to","slug","selectTours","state","tours","SelectAllTours","createSelector","SelectATour","SelectTourLoading","loading","connect","map","_id"],"mappings":"kGAAA,oEA0EeA,IAjEF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,wBAAf,kBACA,qBACEC,IAAG,qBAAgBF,EAAKG,YACxBC,IAAKJ,EAAKK,KACVJ,UAAU,yBAGd,oBAAIA,UAAU,oBAAd,SACE,+BAAOD,EAAKK,YAIhB,sBAAKJ,UAAU,gBAAf,UACE,qBAAIA,UAAU,oBAAd,UACGD,EAAKM,WADR,IACqBN,EAAKO,SAD1B,eAGA,mBAAGN,UAAU,aAAb,SAA2BD,EAAKQ,UAChC,sBAAKP,UAAU,aAAf,UACE,cAAC,IAAD,CAAYA,UAAU,eACtB,+BAAOD,EAAKS,cAAcC,iBAE5B,sBAAKT,UAAU,aAAf,UACE,cAAC,IAAD,CAAeA,UAAU,eACzB,+BACE,cAAC,IAAD,CAAQU,OAAO,WAAf,SAA2BX,EAAKY,WAAW,UAG/C,sBAAKX,UAAU,aAAf,UACE,cAAC,IAAD,CAAWA,UAAU,eACrB,iCAAOD,EAAKa,UAAUC,OAAtB,eAEF,sBAAKb,UAAU,aAAf,UACE,cAAC,IAAD,CAAWA,UAAU,eACrB,iCAAOD,EAAKe,aAAZ,mBAIJ,sBAAKd,UAAU,eAAf,UACE,8BACE,uBAAMA,UAAU,qBAAhB,cAAuCD,EAAKgB,SAC5C,sBAAMf,UAAU,oBAAhB,2BAEF,oBAAGA,UAAU,gBAAb,UACE,sBAAMA,UAAU,qBAAhB,SAAsCD,EAAKiB,iBAC3C,uBAAMhB,UAAU,oBAAhB,qBACWD,EAAKkB,gBADhB,UAIF,cAAC,IAAD,CAAMC,GAAE,gBAAWnB,EAAKoB,MAAQnB,UAAU,4BAA1C,6B,iCC9DR,kHAEMoB,EAAc,SAACC,GAAD,OAAWA,EAAMC,OAExBC,EAAiBC,YAC5BJ,GACA,SAACE,GAAD,OAAWA,EAAMA,SAENG,EAAcD,YAAeJ,GAAa,SAACE,GAAD,OAAWA,EAAMvB,QAC3D2B,EAAoBF,YAC/BJ,GACA,SAACE,GAAD,OAAWA,EAAMK,Y,iCCXnB,yDA6BeC,uBAJS,SAACP,GAAD,MAAY,CAClCC,MAAOC,YAAeF,MAGTO,EArBD,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACf,OACE,sBAAMtB,UAAU,OAAhB,SACE,qBAAKA,UAAU,iBAAf,SACGsB,GAASA,EAAMT,OAAS,EACvBS,EAAMO,KAAI,SAAC9B,GAAD,OAAU,cAAC,IAAD,CAAqBA,KAAMA,GAAhBA,EAAK+B,QAEpC,cAAC,IAAD","file":"static/js/6.4abe46e9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nimport { ImLocation } from 'react-icons/im';\nimport { FaRegFlag, FaRegUser } from 'react-icons/fa';\nimport { IoIosCalendar } from 'react-icons/io';\n\nconst Tour = ({ tour }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">\n        <div className=\"card__picture\">\n          <div className=\"card__picture-overlay\">&nbsp;</div>\n          <img\n            src={`/img/tours/${tour.imageCover}`}\n            alt={tour.name}\n            className=\"card__picture-img\"\n          />\n        </div>\n        <h3 className=\"heading-tertirary\">\n          <span>{tour.name}</span>\n        </h3>\n      </div>\n\n      <div className=\"card__details\">\n        <h4 className=\"card__sub-heading\">\n          {tour.difficulty} {tour.duration}-day tour\n        </h4>\n        <p className=\"card__text\">{tour.summary}</p>\n        <div className=\"card__data\">\n          <ImLocation className=\"card__icon\" />\n          <span>{tour.startLocation.description}</span>\n        </div>\n        <div className=\"card__data\">\n          <IoIosCalendar className=\"card__icon\" />\n          <span>\n            <Moment format=\"MMM YYYY\">{tour.startDates[0]}</Moment>\n          </span>\n        </div>\n        <div className=\"card__data\">\n          <FaRegFlag className=\"card__icon\" />\n          <span>{tour.locations.length} stops</span>\n        </div>\n        <div className=\"card__data\">\n          <FaRegUser className=\"card__icon\" />\n          <span>{tour.maxGroupSize} people</span>\n        </div>\n      </div>\n\n      <div className=\"card__footer\">\n        <p>\n          <span className=\"card__footer-value\">${tour.price}</span>\n          <span className=\"card__footer-text\">per person</span>\n        </p>\n        <p className=\"card__ratings\">\n          <span className=\"card__footer-value\">{tour.ratingsAverage}</span>\n          <span className=\"card__footer-text\">\n            rating ({tour.ratingsQuantity})\n          </span>\n        </p>\n        <Link to={`/tour/${tour.slug}`} className=\"btn btn--green btn--small\">\n          Details\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nTour.propTypes = {\n  tour: PropTypes.object,\n};\n\nexport default Tour;\n","import { createSelector } from 'reselect';\n\nconst selectTours = (state) => state.tours;\n\nexport const SelectAllTours = createSelector(\n  selectTours,\n  (tours) => tours.tours\n);\nexport const SelectATour = createSelector(selectTours, (tours) => tours.tour);\nexport const SelectTourLoading = createSelector(\n  selectTours,\n  (tours) => tours.loading\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tour from './Tour';\nimport Spinner from '../spinner/spinner';\n\nimport { connect } from 'react-redux';\nimport { SelectAllTours } from '../../redux/tours/tours.selectors';\n\nconst Tours = ({ tours }) => {\n  return (\n    <main className=\"main\">\n      <div className=\"card-container\">\n        {tours && tours.length > 0 ? (\n          tours.map((tour) => <Tour key={tour._id} tour={tour} />)\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    </main>\n  );\n};\n\nTours.propTypes = {\n  tours: PropTypes.array,\n};\nconst mapStateToProps = (state) => ({\n  tours: SelectAllTours(state),\n});\n\nexport default connect(mapStateToProps)(Tours);\n"],"sourceRoot":""}