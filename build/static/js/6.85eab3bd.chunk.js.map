{"version":3,"sources":["redux/tours/tours.selectors.js","components/tours/TourFooter.js","components/tours/TourCardDetail.js","components/tours/TourCardHeader.js","components/tours/Tour.js","components/tours/Tours.js"],"names":["selectTours","state","tours","SelectAllTours","createSelector","SelectATour","tour","loading","TourFooter","className","price","ratingsAverage","ratingsQuantity","to","slug","TourCardDetail","difficulty","duration","summary","startLocation","description","format","startDates","locations","length","maxGroupSize","TourCardHeader","src","imageCover","alt","name","Tour","connect","structuredSelector","createStructuredSelector","useSelector","map","_id"],"mappings":"kGAAA,gFAEMA,EAAc,SAACC,GAAD,OAAWA,EAAMC,OAExBC,EAAiBC,YAC5BJ,GACA,SAACE,GAAD,OAAWA,EAAMA,SAENG,EAAcD,YAAeJ,GAAa,SAACE,GAAD,OAAWA,EAAMI,QACvCF,YAC/BJ,GACA,SAACE,GAAD,OAAWA,EAAMK,Y,wDCYJC,EApBI,SAAC,GAAc,IAAZF,EAAW,EAAXA,KACpB,OACE,sBAAKG,UAAU,eAAf,UACE,8BACE,uBAAMA,UAAU,qBAAhB,cAAuCH,EAAKI,SAC5C,sBAAMD,UAAU,oBAAhB,2BAEF,oBAAGA,UAAU,gBAAb,UACE,sBAAMA,UAAU,qBAAhB,SAAsCH,EAAKK,iBAC3C,uBAAMF,UAAU,oBAAhB,qBACWH,EAAKM,gBADhB,UAIF,cAAC,IAAD,CAAMC,GAAE,gBAAWP,EAAKQ,MAAQL,UAAU,4BAA1C,yB,6CCoBSM,EA7BQ,SAAC,GAAc,IAAZT,EAAW,EAAXA,KACxB,OACE,sBAAKG,UAAU,gBAAf,UACE,qBAAIA,UAAU,oBAAd,UACGH,EAAKU,WADR,IACqBV,EAAKW,SAD1B,eAGA,mBAAGR,UAAU,aAAb,SAA2BH,EAAKY,UAChC,sBAAKT,UAAU,aAAf,UACE,cAAC,IAAD,CAAYA,UAAU,eACtB,+BAAOH,EAAKa,cAAcC,iBAE5B,sBAAKX,UAAU,aAAf,UACE,cAAC,IAAD,CAAeA,UAAU,eACzB,+BACE,cAAC,IAAD,CAAQY,OAAO,WAAf,SAA2Bf,EAAKgB,WAAW,UAG/C,sBAAKb,UAAU,aAAf,UACE,cAAC,IAAD,CAAWA,UAAU,eACrB,iCAAOH,EAAKiB,UAAUC,OAAtB,eAEF,sBAAKf,UAAU,aAAf,UACE,cAAC,IAAD,CAAWA,UAAU,eACrB,iCAAOH,EAAKmB,aAAZ,oBCVOC,EAlBQ,SAAC,GAAc,IAAZpB,EAAW,EAAXA,KACxB,OACE,sBAAKG,UAAU,eAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,wBAAf,kBACA,qBACEkB,IAAG,qBAAgBrB,EAAKsB,YACxBC,IAAKvB,EAAKwB,KACVrB,UAAU,yBAGd,oBAAIA,UAAU,oBAAd,SACE,+BAAOH,EAAKwB,aCSLC,IAhBF,SAAC,GAAc,IAAZzB,EAAW,EAAXA,KACd,OACE,sBAAKG,UAAU,OAAf,UACE,cAAC,EAAD,CAAgBH,KAAMA,IAEtB,cAAC,EAAD,CAAgBA,KAAMA,IAEtB,cAAC,EAAD,CAAYA,KAAMA,S,iCCdxB,iEA+Be0B,sBAAQ,KAARA,EAtBD,WACZ,IAAMC,EAAqBC,YAAyB,CAClDhC,MAAOC,MAEDD,EAAUiC,YAAYF,GAAtB/B,MACR,OACE,sBAAMO,UAAU,OAAhB,SACE,qBAAKA,UAAU,iBAAf,SACGP,GAASA,EAAMsB,OAAS,EACvBtB,EAAMkC,KAAI,SAAC9B,GAAD,OAAU,cAAC,IAAD,CAAqBA,KAAMA,GAAhBA,EAAK+B,QAEpC,cAAC,IAAD","file":"static/js/6.85eab3bd.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectTours = (state) => state.tours;\n\nexport const SelectAllTours = createSelector(\n  selectTours,\n  (tours) => tours.tours\n);\nexport const SelectATour = createSelector(selectTours, (tours) => tours.tour);\nexport const SelectTourLoading = createSelector(\n  selectTours,\n  (tours) => tours.loading\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst TourFooter = ({ tour }) => {\n  return (\n    <div className=\"card__footer\">\n      <p>\n        <span className=\"card__footer-value\">${tour.price}</span>\n        <span className=\"card__footer-text\">per person</span>\n      </p>\n      <p className=\"card__ratings\">\n        <span className=\"card__footer-value\">{tour.ratingsAverage}</span>\n        <span className=\"card__footer-text\">\n          rating ({tour.ratingsQuantity})\n        </span>\n      </p>\n      <Link to={`/tour/${tour.slug}`} className=\"btn btn--green btn--small\">\n        Details\n      </Link>\n    </div>\n  );\n};\n\nexport default TourFooter;\n","import React from 'react';\nimport Moment from 'react-moment';\n\nimport { ImLocation } from 'react-icons/im';\nimport { FaRegFlag, FaRegUser } from 'react-icons/fa';\nimport { IoIosCalendar } from 'react-icons/io';\n\nconst TourCardDetail = ({ tour }) => {\n  return (\n    <div className=\"card__details\">\n      <h4 className=\"card__sub-heading\">\n        {tour.difficulty} {tour.duration}-day tour\n      </h4>\n      <p className=\"card__text\">{tour.summary}</p>\n      <div className=\"card__data\">\n        <ImLocation className=\"card__icon\" />\n        <span>{tour.startLocation.description}</span>\n      </div>\n      <div className=\"card__data\">\n        <IoIosCalendar className=\"card__icon\" />\n        <span>\n          <Moment format=\"MMM YYYY\">{tour.startDates[0]}</Moment>\n        </span>\n      </div>\n      <div className=\"card__data\">\n        <FaRegFlag className=\"card__icon\" />\n        <span>{tour.locations.length} stops</span>\n      </div>\n      <div className=\"card__data\">\n        <FaRegUser className=\"card__icon\" />\n        <span>{tour.maxGroupSize} people</span>\n      </div>\n    </div>\n  );\n};\n\nexport default TourCardDetail;\n","import React from 'react';\n\nconst TourCardHeader = ({ tour }) => {\n  return (\n    <div className=\"card__header\">\n      <div className=\"card__picture\">\n        <div className=\"card__picture-overlay\">&nbsp;</div>\n        <img\n          src={`/img/tours/${tour.imageCover}`}\n          alt={tour.name}\n          className=\"card__picture-img\"\n        />\n      </div>\n      <h3 className=\"heading-tertirary\">\n        <span>{tour.name}</span>\n      </h3>\n    </div>\n  );\n};\n\nexport default TourCardHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TourFooter from './TourFooter';\nimport TourCardDetail from './TourCardDetail';\nimport TourCardHeader from './TourCardHeader';\n\nconst Tour = ({ tour }) => {\n  return (\n    <div className=\"card\">\n      <TourCardHeader tour={tour} />\n\n      <TourCardDetail tour={tour} />\n\n      <TourFooter tour={tour} />\n    </div>\n  );\n};\n\nTour.propTypes = {\n  tour: PropTypes.object,\n};\n\nexport default Tour;\n","import React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport Tour from './Tour';\nimport Spinner from '../spinner/Spinner';\n\nimport { connect, useSelector } from 'react-redux';\nimport { SelectAllTours } from '../../redux/tours/tours.selectors';\n\nconst Tours = () => {\n  const structuredSelector = createStructuredSelector({\n    tours: SelectAllTours,\n  });\n  const { tours } = useSelector(structuredSelector);\n  return (\n    <main className=\"main\">\n      <div className=\"card-container\">\n        {tours && tours.length > 0 ? (\n          tours.map((tour) => <Tour key={tour._id} tour={tour} />)\n        ) : (\n          <Spinner />\n        )}\n      </div>\n    </main>\n  );\n};\n\nTours.propTypes = {\n  tours: PropTypes.array,\n};\n\nexport default connect(null)(Tours);\n"],"sourceRoot":""}